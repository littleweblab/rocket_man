///////////////////
// NODE$LISTENER //
///////////////////
module.exports = function( write, fn ) {
  var url = require( "url" )
    ;
  return fab.queue(
    function ( queue ) {
      if ( fn ) fn ( listener );//Callback for listener dont't know what for 
      return write( listener );
      //start
      function listener ( req, res ) {
        var status = 200
          , headers = {}
          ;
          
        queue( 
          fab.render(
            read//pass read function
          , { method: req.method,
              headers: req.headers,
              url: url.parse( "//" + req.headers.host + req.url, false, true )
            }//pass header
          , function body ( write ) {
              req
                .on( "data", write )
                .on( "end", write )
                ;
            }//pass body
          )//END RENDER
        )//END QUEUE
        ;
        function read ( body, head ) {
          if ( !arguments.length ) res.end();//Quit stream
          else {
            ////////////////////////////////
            // UPDATE HEADER FOR RESPONSE //
            ////////////////////////////////
            if ( head ) {
              if ( "status" in head ) status = head.status;//Update status from incoming data stream head  
              if ( "headers" in head ) {
                for ( var name in head.headers ) {
                  headers[ name ] = head.headers[ name ]//Update header from incomming data stream head
                }//END LOOP
              }//END IF
            }//END IF
  
            if ( body ) {
              if ( headers ) {
                res.writeHead( status, headers );
                headers = undefined;
              }//END IF
              //console.log('BODY', body )
              res.write( body );//Bring it on the screen
            }//END IF
          }//END ELSE
          return read;
        }//END READ
     }//END LISTENER
   })//END QUEUE
}//END FAB.LISTENER