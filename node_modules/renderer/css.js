module.exports = function ( tree ) { 
  var helper = require( './helper' )
    , pseudoCss = ''
    ;
  for ( var i in tree ) ! function ( tree ) { 
    var x = pseudoCss.match( new RegExp( tree.parent + '_', 'g' ) )
      , id = tree.ident ? tree.ident : x == null ? tree.parent + '_' + 0 : tree.parent + '_' + x.length
      ;     
  
    ! function () {
      //////////
      // GRID //
      //////////
      if ( ! arguments[ 0 ] ) pseudoCss += "( '#" + id  + " { width: " +  helper.isNumber( tree.width, "px" ) + "; height: " + helper.isNumber( tree.height, "px" ) + "; }' )\n" ;
      ///////////////
      // MENU ITEM //
      ///////////////
      if ( tree.task == 'item' && tree.type == 'item' ) { 
        
        var selector = !! tree.allreadyExist.match( 'hover' ) ? tree.allreadyExist.replace( /#/, '.' ).replace( '-hover', '-default:hover' ) : tree.allreadyExist.replace( /#/, '.' );
        
        pseudoCss += "( '" + selector  + " { " 
          for ( var i = 0; i < arguments.length + 1; i++ ) for ( var arg in arguments[ i ] ) pseudoCss +=  arg + ": " + arguments[ i ][ arg ] + "; "  
        pseudoCss += "}' )\n" 
        
      }//END IF
      ///////////////
      // STYLEABLE //
      ///////////////
      else {
        pseudoCss += "( '#" + id  + " { " 
          for ( var i = 0; i < arguments.length + 1; i++ ) for ( var arg in arguments[ i ] ) pseudoCss += arg.replace( /'/g, '' ) +  ": " + arguments[ i ][ arg ] + "; "  
        pseudoCss += "}' )\n"
      };
    }( tree.styles , tree.saveStyles );
  }( tree[ i ] );
 
  return pseudoCss
}//END CSS