///////////////////////////////
// SETUP MENU TREE STRUCTURE //
////////////////////////////////////////////////////////////////////////////////////
// obj: pages obj                                                                 //
// pageName: name of the page wich is rendered                                    //
// level: level in the pagetree where the render schould start to diplay the menu //
// deep: how much levels in the tree benath the page will be shown                //
// output: show wich pages have passed the filter in the console                  //
////////////////////////////////////////////////////////////////////////////////////
module.exports = function ( obj, pageName, level, deep, output ) { 
   var helper = require( './helper' ) 
    , level = level - 1//Because in user interface level start with 1 instead of 0 
    , pagePath = helper.makeArrayPath( obj[ pageName ].parentid, [ pageName ], obj )
    , filter = {}
    ;
   for ( var x in obj ) { 
    var objPath = helper.makeArrayPath( obj[ x ].parentid, [ x ], obj )
      , objPos = helper.inArray( objPath , x ) 
      ;
    ////////////////////////////////
    // SIBLINGS                   //
    // Loops through the path     //
    // and checks for siblings to //
    // add them to the filter obj // 
    ////////////////////////////////
    for ( var i in pagePath ) {
      var xParent = obj[ x ].parentid
        , iParent = obj[ pagePath[ i ] ].parentid
        ;
      ////////////////////////////////////////////////////////
      // If parent is the same                              //  
      // and objpos is higher or the same as start level... //
      ////////////////////////////////////////////////////////
      //console.log('A ', xParent,'==', iParent, objPos ,'>=', level )
      if ( xParent == iParent && objPos >= level ) { 
        filter[ x ] = helper.deepCopyObject( obj[ x ] );
        if ( output ) console.log('SIBLING >', objPath );  
      }//END IF
    }//END LOOP
    ///////////////////////////////////////////////////////////////////////////////
    // If current obj is on the same level as page or beneath if deep is defined //
    // and current obj is a child of page                                        //
    // and objpos is higher or the same as start level...                        //     
    ///////////////////////////////////////////////////////////////////////////////
    //console.log('B ', pagePath.length + deep ,' >= ', objPath.length , helper.inArray( objPath, pageName ) , ' != ',  -1 && objPos ,'>=', level  )
    if ( pagePath.length + deep >= objPath.length && helper.inArray( objPath, pageName ) != -1 && objPos >= level  ) { 
      //console.log('Y', pagePath[ i ])
      filter[ x ] = helper.deepCopyObject( obj[ x ] ); 
      if ( output ) console.log('IS ' + pageName.toUpperCase() + ' OR CHILD',  objPath ); 
    }//END IF
  }//END LOOP 
  ////////////////////////////////////////////////////////////////////
  // If the parent of an element didn't make it                     //
  // trough the filter it is neccesarry to reset the parent to null // 
  //////////////////////////////////////////////////////////////////// 
  for ( var i in filter ) if ( ! filter[ filter[ i ].parentid ] ) filter[ i ].parentid = 0;
  return filter[ pageName ] ? filter : 'no menu';  
};